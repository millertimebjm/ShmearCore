@model ShmearModel
@{
    ViewBag.Title = "Game of Shmear";
}

<style>
    td.player {
        width: 100%;
        text-align: center;
    }

    td.card {
        width: 33%;
        text-align: center;
    }
</style>

<h2 id="title">Pick a seat</h2>

<div id="seatDiv" style="display: none;">
    <table>
        <tr>
            <td></td>
            <td align="center"><button id="seat1" type="button" class="btn btn-primary seat" style="padding: 20px" value="1">1</button></td>
            <td></td>
        </tr>
        <tr>
            <td><button id="seat4" type="button" class="btn btn-primary seat" style="padding: 20px" value="4">4</button></td>
            <td></td>
            <td><button id="seat2" type="button" class="btn btn-primary seat" style="padding: 20px" value="2">2</button></td>
        </tr>
        <tr>
            <td></td>
            <td align="center"><button id="seat3" type="button" class="btn btn-primary seat" style="padding: 20px" value="3">3</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="cardDiv" style="display: none;">
    <table>
        <tr>
            <td></td>
            <td align="center">
                <table style="width: 100px">
                    <tr>
                        <td class="player" id="player1" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player1card1"></td>
                        <td class="card" id="player1card2"></td>
                        <td class="card" id="player1card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player1card4"></td>
                        <td class="card" id="player1card5"></td>
                        <td class="card" id="player1card6"></td>
                    </tr>
                </table>
            </td>
            <td></td>
        </tr>
        <tr>
            <td align="center">
                <table style="width: 100px">
                    <tr>
                        <td class="player" id="player4" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player4card1"></td>
                        <td class="card" id="player4card2"></td>
                        <td class="card" id="player4card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player4card4"></td>
                        <td class="card" id="player4card5"></td>
                        <td class="card" id="player4card6"></td>
                    </tr>
                </table>
            </td>
            <td>
                <table style="width: 100px;">
                    <tr>
                        <td class="card"><div id="wager0"><a id="wager0link" href="#">0</a></div></td>
                        <td class="card"><div id="player1arrow" style="-ms-transform: rotate(270deg); -webkit-transform: rotate(270deg);transform: rotate(270deg);">▶</div></td>
                        <td class="card"><div id="wager2"><a id="wager2link" href="#">2</a></div></td>
                    </tr>
                    <tr>
                        <td class="card"><div id="player4arrow" style="-ms-transform: rotate(180deg); -webkit-transform: rotate(180deg);transform: rotate(180deg);">▶</div></td>
                        <td class="card"><div id="wager3"><a id="wager3link" href="#">3</a></div></td>
                        <td class="card"><div id="player2arrow">▶</div></td>
                    </tr>
                    <tr>
                        <td class="card"><div id="wager4"><a id="wager4link" href="#">4</a></div></td>
                        <td class="card"><div id="player3arrow" style="-ms-transform: rotate(90deg); -webkit-transform: rotate(90deg);transform: rotate(90deg);">▶</div></td>
                        <td class="card"><div id="wager5"><a id="wager5link" href="#">5</a></div></td>
                    </tr>
                </table>
            </td>
            <td align="center">
                <table style="width: 100px;">
                    <tr>
                        <td class="player" id="player2" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player2card1"></td>
                        <td class="card" id="player2card2"></td>
                        <td class="card" id="player2card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player2card4"></td>
                        <td class="card" id="player2card5"></td>
                        <td class="card" id="player2card6"></td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td></td>
            <td align="center">
                <table style="width: 100px">
                    <tr>
                        <td class="player" id="player3" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player3card1"></td>
                        <td class="card" id="player3card2"></td>
                        <td class="card" id="player3card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player3card4"></td>
                        <td class="card" id="player3card5"></td>
                        <td class="card" id="player3card6"></td>
                    </tr>
                </table>
            </td>
            <td></td>
        </tr>
    </table>
</div>
<br />


<div>
    <button id="leave" class="btn btn-danger">Leave Game</button>
    <button id="ready" class="btn btn-default" style="display: none;">Not Ready</button>
</div>
<br />
<div><input id="playerMessage" type="text" /><button id="sendMessageButton" type="button" value="send">Send</button></div>
<br />
<div id="messages" style="width: 60%;"></div>

<!-- Footer -->
<footer class="page-footer bg-light">
    <div class="row text-center">
        <div class="col-md-1" id="card1"></div>
        <div class="col-md-1" id="card2"></div>
        <div class="col-md-1" id="card3"></div>
        <div class="col-md-1" id="card4"></div>
        <div class="col-md-1" id="card5"></div>
        <div class="col-md-1" id="card6"></div>
    </div>
</footer>
<!-- Footer -->

<script src="~/js/shmear.js"></script>
<script>
    var seats = ['', '', '', ''];
var buttons;
var shmearHub;
var gameId = 0;
var gameStarted = false;
var highestWager = 0;
var i = 0;
var handCardIds = ['', '', '', '', '', ''];

$().ready(function () {
    name = '@Model.Name';
    buttons = [$('#seat1'), $('#seat2'), $('#seat3'), $('#seat4')];
    wagers = [$('#wager2link'), $('#wager3link'), $('#wager4link'), $('#wager5link')];

    console.log("Connection Created");
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/shmearHub")
        .build();

    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    connection.on("Logout", (message) => {
        console.log("Logout called from Server");
        alert(message);
        window.location.replace('http://' + document.location.host + '/');
    });

    console.log("Connection Started");
    var promise = connection.start();
    promise.then(function () {
        var name = getParameterByName('name');
        console.log("SetPlayerName being called from Client:  " + name);
        connection.invoke("SetPlayerName", name);
    });

    connection.on("ReceiveSeatStatuses", (openGameId, seatArray) => {
        console.log("ReceiveSeatStatuses called from Server");
        //console.log('Received seat statuses, connection ID=' + $.connection.hub.id);
        seats = seatArray;
        gameId = openGameId;
        if (!gameStarted) {
            $('#seatDiv').show();
            $('#cardDiv').hide();
        } else {
            $('#cardDiv').show();
            $('#seatDiv').hide();
        }
        seatButtonUpdate();
        readyButtonUpdate();
    });

    connection.on("UpdatePlayerReadyStatus", (ready) => {
        console.log("UpdatePlayerReadyStatus being called from Server");
        $('#ready').removeClass('btn-default');
        $('#ready').removeClass('btn-success');
        if (ready) {
            $('#ready').addClass('btn-success');
            $('#ready').text('Ready');
            $('#title').text('Wait for remaining players');
        } else {
            $('#ready').addClass('btn-default');
            $('#ready').text('Not Ready');
            $('#title').text('Toggle the Ready button');
        }
    });

    connection.on("CardUpdate", (playerIndex, cards, cardCountBySeat) => {
        console.log("CardUpdate called from Server");
        for (i = 0; i < 6; i++) {
            //$('#player'.concat(playerIndex + 1).concat('card').concat(i + 1).concat(' a')).prop("onclick", null);
            //$('#player'.concat(playerIndex + 1).concat('card').concat(i + 1)).html('');
            $('#card'.concat(i + 1).concat(' a')).prop("onclick", null);
            $('#card'.concat(i + 1)).html('');
            handCardIds[i] = 0;
        }

        for (i = 0; i < cards.length; i++) {
            handCardIds[i] = cards[i][0];
            var card = cards[i];
            var cardId = card[0];
            var cardString = card[1];
            //var playerCardId = 'player'.concat(playerIndex + 1).concat('card').concat(i + 1);
            var playerCardId = 'card'.concat(i + 1);
            var playerCardAnchorId = playerCardId.concat('anchor');
            $('#'.concat(playerCardId)).html('<a id="' + playerCardAnchorId + '" href="#">'.concat("<img src='/images/Cards/" + cardString + ".png' style='max-width: 100%; max-height: 100%'>").concat('</a>&nbsp;'));
            //width='100' height='144'
            console.log(playerCardAnchorId.concat(' ').concat(cardId));

            $('#'.concat(playerCardAnchorId)).click(function () {
                console.log($(this).attr('id').charAt(11));
                //console.log(handCardIds[$(this).attr('id').charAt(11)]);
                //player1card1
                //card1
                console.log(handCardIds[$(this).attr('id').charAt(4)]);
                console.log("PlayCard is being called on from the Client");
                //var cardId = parseInt(handCardIds[$(this).attr('id').charAt(11) - 1]);
                var cardId = parseInt(handCardIds[$(this).attr('id').charAt(4) - 1]);
                connection.invoke("PlayCard", gameId, cardId);
            });
        };

        for (i = 0; i < 4; i++) {
            if (!(i === playerIndex)) {
                $('#player'.concat(i + 1).concat('card').concat(1)).text(cardCountBySeat[i]);
            }
        }
        $('#seatDiv').hide();
        $('#cardDiv').show();
    })

    connection.on("HideWager", () => {
        console.log("HideWager being called from Server");
        $('#wager0').hide();
        for (i = 0; i < 4; i++) {
            wagers[i].hide();
        }
    });

    connection.on("PlayerTurnUpdate", (playerSeatTurn) => {
        console.log("PlayerTurnUpdate being called from Server");
        for (i = 1; i < 5; i++) {
            if (playerSeatTurn === i) {
                $('#player'.concat(i).concat('arrow')).show();
            } else {
                $('#player'.concat(i).concat('arrow')).hide();
            }
        }
    });

    connection.on("WagerUpdate", (highestWagerInput) => {
        console.log("WagerUpdate being called from Server");
        $('#wager0').show();
        highestWager = highestWagerInput;
        for (i = 0; i < 4; i++) {
            if ((i + 2) > highestWager) {
                wagers[i].show();
            } else {
                wagers[i].hide();
            }
        }
    });

    connection.on("SendMessage", (message) => {
        console.log("SendMessage being called from Server");
        $('#messages').html('<p>'.concat(message).concat('</p>').concat($('#messages').html()));
    });

    $('#wager0link').click(function () {
        var wager = parseInt($('#wager0').text());
        console.log("SetWager being called from Client.  GameId: " + gameId + " | WagerId: " + wager);
        connection.invoke("SetWager", gameId, wager);
    });

    $('#ready').click(function () {
        console.log("TogglePlayerReadyStatus being called from Client");
        connection.invoke("TogglePlayerReadyStatus", gameId);
    });

    function seatButtonUpdate() {
        for (var i = 0; i < 4; i++) {
            buttons[i].removeClass('btn-primary');
            buttons[i].removeClass('btn-default');
            buttons[i].removeClass('btn-success');
            buttons[i].text(seats[i]);
            if (seats[i] === '') {
                buttons[i].addClass('btn-primary');
                buttons[i].text(i + 1);
            }
            if (seats[i] === name) {
                buttons[i].addClass('btn-success');
            }
            if (!(seats[i] === name) && !(seats[i] === '')) {
                buttons[i].addClass('btn-default');
            }
        }

        for (var i = 0; i < 4; i++) {
            if (!(seats[i] === '')) {
                break;
            }
            if (i === 3) {
                $('ready').show();
                return;
            }
        };

        for (var i = 0; i < 4; i++) {
            if (!(seats[i] === '')) {
                $('#player'.concat(i + 1)).text(seats[i]);
            }
        };

        $('ready').hide();
    };

    function readyButtonUpdate() {
        $('#title').html('Pick a seat');
        $('#ready').hide();
        for (var j = 0; j < 4; j++) {
            if (buttons[j].text() === '@Model.Name') {
                $('#title').html('Toggle the Ready button');
                $('#ready').show();
            }
        };
    };

    $('#leave').click(function () {
        console.log("Calling the LeaveSeat function from Client");
        connection.invoke("LeaveSeat", gameId);
        $('#ready').hide();
        $('#cardDiv').hide();
        $('#seatDiv').show();
    });

    for (var i = 0; i < 4; i++) {
        buttons[i].click(function () {
            var buttonId = parseInt($(this).val());
            console.log("SetSeatStatus being called from Client.  GameId: " + gameId + " | buttonId: " + buttonId);
            var promise = connection.invoke("SetSeatStatus", gameId, buttonId);
            promise.then(function () {
                readyButtonUpdate();
            });
        });
    };

    for (i = 0; i < 4; i++) {
        wagers[i].click(function () {
            var wager = parseInt($(this).text());
            console.log("SetWager being called from Client.  GameId: " + gameId + " | WagerId: " + wager);
            connection.invoke("SetWager", gameId, wager);
        });
    }

    $('#sendMessageButton').click(function () {
        var message = parseInt($('#playerMessage').val());
        console.log("SendChat being called from Client");
        connection.invoke("SendChat", gameId, message);
        $('#playerMessage').val('');
    });
});
</script>