@model ShmearModel
@{
    ViewBag.Title = "Game of Shmear";
}

<style>
    td.player {
        width: 100%;
        text-align: center;
    }

    td.card {
        width: 33%;
        text-align: center;
    }
</style>

<h2 id="title">Pick a seat</h2>

<div id="seatDiv" style="display: none;">
    <table>
        <tr>
            <td></td>
            <td align="center"><button id="seat1" type="button" class="btn btn-primary" style="padding: 20px" value="1">1</button></td>
            <td></td>
        </tr>
        <tr>
            <td><button id="seat4" type="button" class="btn btn-primary" style="padding: 20px" value="4">4</button></td>
            <td></td>
            <td><button id="seat2" type="button" class="btn btn-primary" style="padding: 20px" value="2">2</button></td>
        </tr>
        <tr>
            <td></td>
            <td align="center"><button id="seat3" type="button" class="btn btn-primary" style="padding: 20px" value="3">3</button></td>
            <td></td>
        </tr>
    </table>
</div>
<div id="cardDiv" style="display: none;">
    <table>
        <tr>
            <td></td>
            <td align="center">
                <table style="width: 100px">
                    <tr>
                        <td class="player" id="player1" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player1card1"></td>
                        <td class="card" id="player1card2"></td>
                        <td class="card" id="player1card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player1card4"></td>
                        <td class="card" id="player1card5"></td>
                        <td class="card" id="player1card6"></td>
                    </tr>
                </table>
            </td>
            <td></td>
        </tr>
        <tr>
            <td align="center">
                <table style="width: 100px">
                    <tr>
                        <td class="player" id="player4" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player4card1"></td>
                        <td class="card" id="player4card2"></td>
                        <td class="card" id="player4card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player4card4"></td>
                        <td class="card" id="player4card5"></td>
                        <td class="card" id="player4card6"></td>
                    </tr>
                </table>
            </td>
            <td>
                <table style="width: 100px;">
                    <tr>
                        <td class="card"><div id="wager0"><a id="wager0link" href="#">0</a></div></td>
                        <td class="card"><div id="player1arrow" style="-ms-transform: rotate(270deg); -webkit-transform: rotate(270deg);transform: rotate(270deg);">▶</div></td>
                        <td class="card"><div id="wager2"><a id="wager2link" href="#">2</a></div></td>
                    </tr>
                    <tr>
                        <td class="card"><div id="player4arrow" style="-ms-transform: rotate(180deg); -webkit-transform: rotate(180deg);transform: rotate(180deg);">▶</div></td>
                        <td class="card"><div id="wager3"><a id="wager3link" href="#">3</a></div></td>
                        <td class="card"><div id="player2arrow">▶</div></td>
                    </tr>
                    <tr>
                        <td class="card"><div id="wager4"><a id="wager4link" href="#">4</a></div></td>
                        <td class="card"><div id="player3arrow" style="-ms-transform: rotate(90deg); -webkit-transform: rotate(90deg);transform: rotate(90deg);">▶</div></td>
                        <td class="card"><div id="wager5"><a id="wager5link" href="#">5</a></div></td>
                    </tr>
                </table>
            </td>
            <td align="center">
                <table style="width: 100px;">
                    <tr>
                        <td class="player" id="player2" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player2card1"></td>
                        <td class="card" id="player2card2"></td>
                        <td class="card" id="player2card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player2card4"></td>
                        <td class="card" id="player2card5"></td>
                        <td class="card" id="player2card6"></td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td></td>
            <td align="center">
                <table style="width: 100px">
                    <tr>
                        <td class="player" id="player3" colspan="3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player3card1"></td>
                        <td class="card" id="player3card2"></td>
                        <td class="card" id="player3card3"></td>
                    </tr>
                    <tr>
                        <td class="card" id="player3card4"></td>
                        <td class="card" id="player3card5"></td>
                        <td class="card" id="player3card6"></td>
                    </tr>
                </table>
            </td>
            <td></td>
        </tr>
    </table>
</div>
<br />


<div>
    <button id="leave" class="btn btn-danger">Leave Game</button>
    <button id="ready" class="btn btn-default" style="display: none;">Not Ready</button>
</div>
<br />
<div><input id="playerMessage" type="text" /><button id="sendMessageButton" type="button" value="send">Send</button></div>
<br />
<div id="messages" style="width: 60%;"></div>

@*<script src="~/Hubs/"></script>*@
@*<script src="/signalr/Hubs"></script>*@

<script>
    $().ready(function () {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/shmearHub")
            .build();

        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }

        connection.on("Logout", (message) => {
            alert(message);
            window.location.replace('http://' + document.location.host + '/');
        });

        connection.on("ReceiveMessage", (user, message) => {
            const msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            const encodedMsg = user + " says " + msg;
            alert(encodedMsg);
        });

        var promise = connection.start();
        promise.then(function () {
            connection.invoke("SendMessage", "Brandon", "HI").catch(err => console.error(err.toString()));
            connection.invoke("SetPlayerName", getParameterByName('name'))
        });        
    });
</script>

@*<script>
    var seats = ['', '', '', ''];
    var buttons;
    var shmearHub;
    var gameId = 0;
    var gameStarted = false;
    var highestWager = 0;
    var i = 0;
    var handCardIds = ['', '', '', '', '', ''];

    function fixedEncodeURIComponent(str) {
        return encodeURIComponent(str).replace(/[!'()]/g, escape).replace(/\*/g, "%2A");
    }

    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
            results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    function updateSeats() {
        for (i = 0; i < 4; i++) {
            seats[i] = shmearHub.server.getSeatStatusByIndex(i);
            //console.log(seats[i]);
        }
    }

    $().ready(function () {
        name = '@Model.Name';
        buttons = [$('#seat1'), $('#seat2'), $('#seat3'), $('#seat4')];
        console.log($.connection);
        shmearHub = $.connection.shmearHub;
        wagers = [$('#wager2link'), $('#wager3link'), $('#wager4link'), $('#wager5link')];

        $('#sendMessageButton').click(function () {
            shmearHub.server.sendChat(gameId, $('#playerMessage').val());
            $('#playerMessage').val('');
        });

        $('#wager0link').click(function () {
            shmearHub.server.setWager(gameId, $('#wager0').text());
        });

        for (i = 0; i < 4; i++) {
            wagers[i].click(function () {
                shmearHub.server.setWager(gameId, $(this).text());
            });
        }

        shmearHub.client.receiveSeatStatuses = function (openGameId, seatArray) {
            //console.log('Received seat statuses, connection ID=' + $.connection.hub.id);
            seats = seatArray;
            gameId = openGameId;
            if (!gameStarted) {
                $('#seatDiv').show();
                $('#cardDiv').hide();
            } else {
                $('#cardDiv').show();
                $('#seatDiv').hide();
            }
            seatButtonUpdate();
            readyButtonUpdate();
        };

        shmearHub.client.logoutPlayer = function (message) {
            //window.location.replace(document.location.host + '/?');//message=');//+ fixedEncodeURIComponent(message))
            window.location.replace('http://' + document.location.host + '/');
        };

        shmearHub.client.updatePlayerReadyStatus = function (ready) {
            $('#ready').removeClass('btn-default');
            $('#ready').removeClass('btn-success');
            if (ready) {
                $('#ready').addClass('btn-success');
                $('#ready').text('Ready');
                $('#title').text('Wait for remaining players');
            } else {
                $('#ready').addClass('btn-default');
                $('#ready').text('Not Ready');
                $('#title').text('Toggle the Ready button');
            }
        };

        shmearHub.client.cardUpdate = function (playerIndex, cards, cardCountBySeat) {
            for (i = 0; i < 6; i++) {
                $('#player'.concat(playerIndex + 1).concat('card').concat(i + 1).concat(' a')).prop("onclick", null);
                $('#player'.concat(playerIndex + 1).concat('card').concat(i + 1)).html('');
                handCardIds[i] = 0;
            }

            for (i = 0; i < cards.length; i++) {
                handCardIds[i] = cards[i][0];
                var card = cards[i];
                var cardId = card[0];
                var cardString = card[1];
                var playerCardId = 'player'.concat(playerIndex + 1).concat('card').concat(i + 1);
                var playerCardAnchorId = playerCardId.concat('anchor');
                //console.log('#player'.concat(playerIndex + 1).concat('card').concat(i + 1));
                $('#'.concat(playerCardId)).html('<a id="' + playerCardAnchorId + '" href="#">'.concat("<img src='/Content/Cards/" + cardString + ".png' width='100' height='144'>").concat('</a>&nbsp;'));
                console.log(playerCardAnchorId.concat(' ').concat(cardId));

                $('#'.concat(playerCardAnchorId)).click(function () {
                    console.log($(this).attr('id').charAt(11));
                    console.log(handCardIds[$(this).attr('id').charAt(11)]);
                    shmearHub.server.playCard(gameId, handCardIds[$(this).attr('id').charAt(11) - 1]);
                });
            };

            for (i = 0; i < 4; i++) {
                if (!(i === playerIndex)) {
                    //console.log('#player'.concat(j+1).concat('card').concat(1));
                    $('#player'.concat(i + 1).concat('card').concat(1)).text(cardCountBySeat[i]);
                }
            }
            $('#seatDiv').hide();
            $('#cardDiv').show();
        };

        shmearHub.client.wagerUpdate = function (highestWagerInput) {
            $('#wager0').show();
            highestWager = highestWagerInput;
            for (i = 0; i < 4; i++) {
                if ((i + 2) > highestWager) {
                    wagers[i].show();
                } else {
                    wagers[i].hide();
                }
            }
        };

        shmearHub.client.hideWager = function () {
            $('#wager0').hide();
            for (i = 0; i < 4; i++) {
                wagers[i].hide();
            }
        };

        shmearHub.client.playerTurnUpdate = function (playerSeatTurn) {
            for (i = 1; i < 5; i++) {
                //console.log('#player'.concat(i).concat('arrow'));
                if (playerSeatTurn === i) {
                    $('#player'.concat(i).concat('arrow')).show();
                } else {
                    $('#player'.concat(i).concat('arrow')).hide();
                }
            }
        };

        shmearHub.client.sendMessage = function (message) {
            $('#messages').html('<p>'.concat(message).concat('</p>').concat($('#messages').html()));
        };

        for (var i = 0; i < 4; i++) {
            buttons[i].click(function () {
                //console.log('Trying to sit at ' + $(this).val() + ', connection ID=' + $.connection.hub.id);
                shmearHub.server.setSeatStatus(gameId, $(this).val()).done(function (result) {
                    readyButtonUpdate();
                });

                //console.log('After to sit, connection ID=' + $.connection.hub.id);
            });
        };

        $('#leave').click(function () {
            shmearHub.server.leaveSeat(gameId);
            $('#ready').hide();
            $('#cardDiv').hide();
            $('#seatDiv').show();
        });

        $('#ready').click(function () {
            shmearHub.server.togglePlayerReadyStatus(gameId);
        });

        $.connection.hub.start().done(function () {
            //console.log('Now connected, connection ID=' + $.connection.hub.id);
            shmearHub.server.setPlayerName(getParameterByName('name'));
        }).fail(function () { console.log('Could not Connect!'); });
    });

    function readyButtonUpdate() {
        $('#title').html('Pick a seat');
        $('#ready').hide();
        for (var j = 0; j < 4; j++) {
            if (buttons[j].text() === '@Model.Name') {
                $('#title').html('Toggle the Ready button');
                $('#ready').show();
            }
        };
    };

    function seatButtonUpdate() {
        for (var i = 0; i < 4; i++) {
            //console.log(seats[i]);
            buttons[i].removeClass('btn-primary');
            buttons[i].removeClass('btn-default');
            buttons[i].removeClass('btn-success');
            buttons[i].text(seats[i]);
            if (seats[i] === '') {
                buttons[i].addClass('btn-primary');
                buttons[i].text(i + 1);
            }
            if (seats[i] === name) {
                buttons[i].addClass('btn-success');
                //buttons[i].data(name);
            }
            if (!(seats[i] === name) && !(seats[i] === '')) {
                buttons[i].addClass('btn-default');
                //buttons[i].data(seats[i]);
            }
        }

        for (var i = 0; i < 4; i++) {
            if (!(seats[i] === '')) {
                break;
            }
            if (i === 3) {
                $('ready').show();
                return;
            }
        };

        for (var i = 0; i < 4; i++) {
            if (!(seats[i] === '')) {
                $('#player'.concat(i + 1)).text(seats[i]);
            }
        };

        $('ready').hide();
    };
</script>*@